runApp()
run_app()
run_app()
library(kenyaFoodPrices)
run_app()
devtools::build()
run_app()
run_app()
## Run checks ----
## Check the package before sending to prod
devtools::check()
run_app()
datasets()
data()
run_app()
## Run checks ----
## Check the package before sending to prod
devtools::check()
## Local, CRAN or Package Manager ----
## This will build a tar.gz that can be installed locally,
## sent to CRAN, or to a package manager
devtools::build()
library(kenyaFoodPrices)
run_app()
## Run checks ----
## Check the package before sending to prod
devtools::check()
run_app()
## Run checks ----
## Check the package before sending to prod
devtools::check()
install.packages("leaflet")
install.packages("plotly")
## Run checks ----
## Check the package before sending to prod
devtools::check()
attachment::att_amend_desc()
## Run checks ----
## Check the package before sending to prod
devtools::check()
run_app()
devtools::check()
51-7
devtools::check()
run_app()
devtools::check()
run_app()
source("~/r_projects/shiny/kenyaFoodPrices/dev/deploy.R")
source("~/r_projects/shiny/kenyaFoodPrices/dev/deploy.R")
desc::desc_get_field("kenyaFoodPrices")
desc::desc_get_field("kenyaFoodPrices")
desc::desc_get_field("Package")
rsconnect::deployments(".")$appID
rsconnect::deployApp(
appName = desc::desc_get_field("Package"),
appTitle = desc::desc_get_field("Package"),
appFiles = c(
# Add any additional files unique to your app here.
"R/",
"inst/",
"data/",
"NAMESPACE",
"DESCRIPTION",
"app.R"
),
appId = rsconnect::deployments(".")$appID,
lint = FALSE,
forceUpdate = TRUE
)
golem::add_shinyappsio_file()
shiny::runApp()
rsconnect::setAccountInfo(name='mmburu',
token=Sys.getenv("RS_CONNECT_TOKEN"),
secret= Sys.getenv("RS_CONNECT_SECRET"))
#golem::add_shinyappsio_file()
rsconnect::deployApp(
appName = desc::desc_get_field("Package"),
appTitle = desc::desc_get_field("Package"),
appFiles = c(
# Add any additional files unique to your app here.
"R/",
"inst/",
"data/",
"NAMESPACE",
"DESCRIPTION",
"app.R"
),
appId = rsconnect::deployments(".")$appID,
lint = FALSE,
forceUpdate = TRUE
)
#golem::add_shinyappsio_file()
rsconnect::deployApp(
appName = desc::desc_get_field("Package"),
appTitle = desc::desc_get_field("Package"),
appFiles = c(
# Add any additional files unique to your app here.
"R/",
"inst/",
"data/",
"NAMESPACE",
"DESCRIPTION",
"app.R"
),
appId = rsconnect::deployments(".")$appID,
lint = FALSE,
forceUpdate = TRUE
)
#golem::add_shinyappsio_file()
rsconnect::deployApp(
appName = desc::desc_get_field("Package"),
appTitle = desc::desc_get_field("Package"),
appFiles = c(
# Add any additional files unique to your app here.
"R/",
"inst/",
"data/",
"NAMESPACE",
"DESCRIPTION",
"app.R"
),
appId = rsconnect::deployments(".")$appID,
lint = FALSE,
forceUpdate = TRUE
)
#golem::add_shinyappsio_file()
rsconnect::deployApp(
appName = desc::desc_get_field("Package"),
appTitle = desc::desc_get_field("Package"),
appFiles = c(
# Add any additional files unique to your app here.
"R/",
"inst/",
"data/",
"NAMESPACE",
"DESCRIPTION",
"app.R"
),
appId = rsconnect::deployments(".")$appID,
lint = FALSE,
forceUpdate = TRUE
)
devtools::check()
# Packages with their required versions
packages <- c(
"config",
"data.table" ,
"dplyr",
"DT",
"golem",
"leaflet" ,
"plotly",
"ggplot2",
"shiny",
'lubridate', 'leaflet', 'plotly', 'ggplot2', 'dplyr',
'data.table', 'remotes', 'rmarkdown', 'usethis', 'devtools',
'checkhelper', 'golem', 'DT', 'config'
) %>% unique() %>% dput()
# Function to check and install packages more efficiently
check_and_install_packages <- function(packages) {
# Finding which packages are not installed
installed <- installed.packages()[,"Package"]
to_install <- packages[!packages %in% installed]
# Installing the missing packages
if (length(to_install) > 0) {
install.packages(to_install, dependencies = TRUE, repos = 'http://cran.rstudio.com')
}
}
installed.packages()[,"Package"]
# Function to check and install packages more efficiently
check_and_install_packages <- function(packages) {
# Finding which packages are not installed
installed <- installed.packages()[,"Package"]
to_install <- packages[!packages %in% installed]
# Installing the missing packages
if (length(to_install) > 0) {
install.packages(to_install, dependencies = TRUE, repos = 'http://cran.rstudio.com')
}
}
# List of packages to ensure are installed
packages <- c("config", "data.table", "dplyr", "DT", "golem", "leaflet",
"plotly", "ggplot2", "shiny", "lubridate", "remotes", "rmarkdown",
"usethis", "devtools", "checkhelper")
# Check and install packages as necessary
check_and_install_packages(packages)
# List of packages to ensure are installed
packages <- c("config", "data.table", "dplyr", "DT", "golem", "leaflet",
"plotly", "ggplot2", "shiny", "lubridate", "remotes", "rmarkdown",
"usethis", "devtools", "checkhelper", "tmap")
# Check and install packages as necessary
check_and_install_packages(packages)
run_app()
